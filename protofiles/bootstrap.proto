syntax = "proto3";

package can;

option go_package = "./protofiles";

import "google/protobuf/empty.proto";

// BootstrapService provides the ability to discover nodes in the network
service BootstrapService {
  // JoinInfo returns a list of active nodes in the network
  rpc JoinInfo(JoinInfoRequest) returns (JoinInfoResponse);

  // GetRootCApem returns the root CA certificate
  rpc GetRootCApem(google.protobuf.Empty) returns (RootCApemResponse);

  // SignCSR signs a Certificate Signing Request (CSR) and returns the signed certificate
  rpc SignCSR(SignCSRRequest) returns (SignCSRResponse);
}

// JoinInfoRequest contains information about a node in the network
message JoinInfoRequest {
  // Address where the node can be reached
  string address = 1;
}

// JoinInfoResponse contains a list of active nodes in the network
message JoinInfoResponse {
  uint32 dimensions = 1;
  uint32 num_hashes = 2;
  string node_id = 3;
  repeated string active_nodes = 4; // IP Addresses of active nodes
}

// RootCApemResponse contains the root CA certificate
message RootCApemResponse {
  bytes root_ca_pem = 1; // PEM encoded root CA certificate
}

message SignCSRRequest {
  bytes csr_pem = 1; // PEM-encoded CSR generated by node
  string ip_san = 2; // IP SAN for the certificate
}

message SignCSRResponse {
  bytes signed_cert_pem = 1; // Signed certificate (PEM)
}