// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: can.proto

package protofiles

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// meta types Zone, Node and KeyValuePair
type Zone struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	MinCoordinates []float32              `protobuf:"fixed32,1,rep,packed,name=minCoordinates,proto3" json:"minCoordinates,omitempty"` // coordinates of the zone (d)
	MaxCoordinates []float32              `protobuf:"fixed32,2,rep,packed,name=maxCoordinates,proto3" json:"maxCoordinates,omitempty"` // coordinates of the zone (d)
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Zone) Reset() {
	*x = Zone{}
	mi := &file_can_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Zone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Zone) ProtoMessage() {}

func (x *Zone) ProtoReflect() protoreflect.Message {
	mi := &file_can_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Zone.ProtoReflect.Descriptor instead.
func (*Zone) Descriptor() ([]byte, []int) {
	return file_can_proto_rawDescGZIP(), []int{0}
}

func (x *Zone) GetMinCoordinates() []float32 {
	if x != nil {
		return x.MinCoordinates
	}
	return nil
}

func (x *Zone) GetMaxCoordinates() []float32 {
	if x != nil {
		return x.MaxCoordinates
	}
	return nil
}

type Node struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"` // Unique identifier for the node
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`             // IP:Port of the node
	Zone          *Zone                  `protobuf:"bytes,3,opt,name=zone,proto3" json:"zone,omitempty"`                   // The zone assigned to the node
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Node) Reset() {
	*x = Node{}
	mi := &file_can_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_can_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_can_proto_rawDescGZIP(), []int{1}
}

func (x *Node) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *Node) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Node) GetZone() *Zone {
	if x != nil {
		return x.Zone
	}
	return nil
}

type KeyValuePair struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         []byte                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyValuePair) Reset() {
	*x = KeyValuePair{}
	mi := &file_can_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyValuePair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValuePair) ProtoMessage() {}

func (x *KeyValuePair) ProtoReflect() protoreflect.Message {
	mi := &file_can_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValuePair.ProtoReflect.Descriptor instead.
func (*KeyValuePair) Descriptor() ([]byte, []int) {
	return file_can_proto_rawDescGZIP(), []int{2}
}

func (x *KeyValuePair) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KeyValuePair) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// Request for joining the CAN network
type JoinRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// coordinates of the zone to be split - should be exactly d floats
	Coordinates   []float32 `protobuf:"fixed32,1,rep,packed,name=coordinates,proto3" json:"coordinates,omitempty"`
	NodeId        string    `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"` // Unique identifier for the node
	Address       string    `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`             // IP:Port of the node
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinRequest) Reset() {
	*x = JoinRequest{}
	mi := &file_can_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRequest) ProtoMessage() {}

func (x *JoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_can_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRequest.ProtoReflect.Descriptor instead.
func (*JoinRequest) Descriptor() ([]byte, []int) {
	return file_can_proto_rawDescGZIP(), []int{3}
}

func (x *JoinRequest) GetCoordinates() []float32 {
	if x != nil {
		return x.Coordinates
	}
	return nil
}

func (x *JoinRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *JoinRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type JoinResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	AssignedZone    *Zone                  `protobuf:"bytes,1,opt,name=assigned_zone,json=assignedZone,proto3" json:"assigned_zone,omitempty"`          // The zone assigned to the node
	Neighbors       []*Node                `protobuf:"bytes,2,rep,name=neighbors,proto3" json:"neighbors,omitempty"`                                    // List of neighboring nodes
	TransferredData []*KeyValuePair        `protobuf:"bytes,3,rep,name=transferred_data,json=transferredData,proto3" json:"transferred_data,omitempty"` // Key-value pairs for the assigned zone
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *JoinResponse) Reset() {
	*x = JoinResponse{}
	mi := &file_can_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinResponse) ProtoMessage() {}

func (x *JoinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_can_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinResponse.ProtoReflect.Descriptor instead.
func (*JoinResponse) Descriptor() ([]byte, []int) {
	return file_can_proto_rawDescGZIP(), []int{4}
}

func (x *JoinResponse) GetAssignedZone() *Zone {
	if x != nil {
		return x.AssignedZone
	}
	return nil
}

func (x *JoinResponse) GetNeighbors() []*Node {
	if x != nil {
		return x.Neighbors
	}
	return nil
}

func (x *JoinResponse) GetTransferredData() []*KeyValuePair {
	if x != nil {
		return x.TransferredData
	}
	return nil
}

// Request for looking up a key
type GetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	HashToUse     int32                  `protobuf:"varint,2,opt,name=hash_to_use,json=hashToUse,proto3" json:"hash_to_use,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	mi := &file_can_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_can_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_can_proto_rawDescGZIP(), []int{5}
}

func (x *GetRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GetRequest) GetHashToUse() int32 {
	if x != nil {
		return x.HashToUse
	}
	return 0
}

type GetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         []byte                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	mi := &file_can_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_can_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_can_proto_rawDescGZIP(), []int{6}
}

func (x *GetResponse) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// Request for storing a key-value pair
type PutRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         []byte                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	HashToUse     int32                  `protobuf:"varint,3,opt,name=hash_to_use,json=hashToUse,proto3" json:"hash_to_use,omitempty"` // Hash function to use for the key
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutRequest) Reset() {
	*x = PutRequest{}
	mi := &file_can_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutRequest) ProtoMessage() {}

func (x *PutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_can_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutRequest.ProtoReflect.Descriptor instead.
func (*PutRequest) Descriptor() ([]byte, []int) {
	return file_can_proto_rawDescGZIP(), []int{7}
}

func (x *PutRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PutRequest) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *PutRequest) GetHashToUse() int32 {
	if x != nil {
		return x.HashToUse
	}
	return 0
}

type PutResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // Whether the key-value pair was stored successfully
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutResponse) Reset() {
	*x = PutResponse{}
	mi := &file_can_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutResponse) ProtoMessage() {}

func (x *PutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_can_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutResponse.ProtoReflect.Descriptor instead.
func (*PutResponse) Descriptor() ([]byte, []int) {
	return file_can_proto_rawDescGZIP(), []int{8}
}

func (x *PutResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Request for deleting a key-value pair
type DeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	HashToUse     int32                  `protobuf:"varint,2,opt,name=hash_to_use,json=hashToUse,proto3" json:"hash_to_use,omitempty"` // Hash function to use for the key
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	mi := &file_can_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_can_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_can_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DeleteRequest) GetHashToUse() int32 {
	if x != nil {
		return x.HashToUse
	}
	return 0
}

type DeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // Whether the key-value pair was deleted successfully
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	mi := &file_can_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_can_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_can_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Request for adding a neighbor
type AddNeighborRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Neighbor      *Node                  `protobuf:"bytes,1,opt,name=neighbor,proto3" json:"neighbor,omitempty"` // The node to add as a neighbor
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddNeighborRequest) Reset() {
	*x = AddNeighborRequest{}
	mi := &file_can_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddNeighborRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNeighborRequest) ProtoMessage() {}

func (x *AddNeighborRequest) ProtoReflect() protoreflect.Message {
	mi := &file_can_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNeighborRequest.ProtoReflect.Descriptor instead.
func (*AddNeighborRequest) Descriptor() ([]byte, []int) {
	return file_can_proto_rawDescGZIP(), []int{11}
}

func (x *AddNeighborRequest) GetNeighbor() *Node {
	if x != nil {
		return x.Neighbor
	}
	return nil
}

type AddNeighborResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // Whether the neighbor was added successfully
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddNeighborResponse) Reset() {
	*x = AddNeighborResponse{}
	mi := &file_can_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddNeighborResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNeighborResponse) ProtoMessage() {}

func (x *AddNeighborResponse) ProtoReflect() protoreflect.Message {
	mi := &file_can_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNeighborResponse.ProtoReflect.Descriptor instead.
func (*AddNeighborResponse) Descriptor() ([]byte, []int) {
	return file_can_proto_rawDescGZIP(), []int{12}
}

func (x *AddNeighborResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Request for sending a heartbeat
type HeartbeatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"` // IP:Port of the node
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	mi := &file_can_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_can_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_can_proto_rawDescGZIP(), []int{13}
}

func (x *HeartbeatRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type HeartbeatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // Whether the heartbeat was acknowledged
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	mi := &file_can_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_can_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_can_proto_rawDescGZIP(), []int{14}
}

func (x *HeartbeatResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Request for sending neighbor and zone information
type NeighbourInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"` // Unique identifier for the node
	Zone          *Zone                  `protobuf:"bytes,2,opt,name=zone,proto3" json:"zone,omitempty"`                   // The zone assigned to the node
	Neighbours    []*Node                `protobuf:"bytes,3,rep,name=neighbours,proto3" json:"neighbours,omitempty"`       // List of neighboring nodes
	Zones         []*Zone                `protobuf:"bytes,4,rep,name=zones,proto3" json:"zones,omitempty"`                 // List of neighbor zones
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NeighbourInfoRequest) Reset() {
	*x = NeighbourInfoRequest{}
	mi := &file_can_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NeighbourInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NeighbourInfoRequest) ProtoMessage() {}

func (x *NeighbourInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_can_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NeighbourInfoRequest.ProtoReflect.Descriptor instead.
func (*NeighbourInfoRequest) Descriptor() ([]byte, []int) {
	return file_can_proto_rawDescGZIP(), []int{15}
}

func (x *NeighbourInfoRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *NeighbourInfoRequest) GetZone() *Zone {
	if x != nil {
		return x.Zone
	}
	return nil
}

func (x *NeighbourInfoRequest) GetNeighbours() []*Node {
	if x != nil {
		return x.Neighbours
	}
	return nil
}

func (x *NeighbourInfoRequest) GetZones() []*Zone {
	if x != nil {
		return x.Zones
	}
	return nil
}

type NeighbourInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // Whether the neighbor information was sent successfully
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NeighbourInfoResponse) Reset() {
	*x = NeighbourInfoResponse{}
	mi := &file_can_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NeighbourInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NeighbourInfoResponse) ProtoMessage() {}

func (x *NeighbourInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_can_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NeighbourInfoResponse.ProtoReflect.Descriptor instead.
func (*NeighbourInfoResponse) Descriptor() ([]byte, []int) {
	return file_can_proto_rawDescGZIP(), []int{16}
}

func (x *NeighbourInfoResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// New message types
type LeaveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LeavingNodeId string                 `protobuf:"bytes,1,opt,name=leaving_node_id,json=leavingNodeId,proto3" json:"leaving_node_id,omitempty"`
	LeavingZone   *Zone                  `protobuf:"bytes,2,opt,name=leaving_zone,json=leavingZone,proto3" json:"leaving_zone,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaveRequest) Reset() {
	*x = LeaveRequest{}
	mi := &file_can_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveRequest) ProtoMessage() {}

func (x *LeaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_can_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveRequest.ProtoReflect.Descriptor instead.
func (*LeaveRequest) Descriptor() ([]byte, []int) {
	return file_can_proto_rawDescGZIP(), []int{17}
}

func (x *LeaveRequest) GetLeavingNodeId() string {
	if x != nil {
		return x.LeavingNodeId
	}
	return ""
}

func (x *LeaveRequest) GetLeavingZone() *Zone {
	if x != nil {
		return x.LeavingZone
	}
	return nil
}

type LeaveResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaveResponse) Reset() {
	*x = LeaveResponse{}
	mi := &file_can_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveResponse) ProtoMessage() {}

func (x *LeaveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_can_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveResponse.ProtoReflect.Descriptor instead.
func (*LeaveResponse) Descriptor() ([]byte, []int) {
	return file_can_proto_rawDescGZIP(), []int{18}
}

func (x *LeaveResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *LeaveResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type DFSRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LeavingNodeId string                 `protobuf:"bytes,1,opt,name=leaving_node_id,json=leavingNodeId,proto3" json:"leaving_node_id,omitempty"`
	ParentZone    *Zone                  `protobuf:"bytes,2,opt,name=parent_zone,json=parentZone,proto3" json:"parent_zone,omitempty"`
	ParentNodeId  string                 `protobuf:"bytes,3,opt,name=parent_node_id,json=parentNodeId,proto3" json:"parent_node_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DFSRequest) Reset() {
	*x = DFSRequest{}
	mi := &file_can_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DFSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DFSRequest) ProtoMessage() {}

func (x *DFSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_can_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DFSRequest.ProtoReflect.Descriptor instead.
func (*DFSRequest) Descriptor() ([]byte, []int) {
	return file_can_proto_rawDescGZIP(), []int{19}
}

func (x *DFSRequest) GetLeavingNodeId() string {
	if x != nil {
		return x.LeavingNodeId
	}
	return ""
}

func (x *DFSRequest) GetParentZone() *Zone {
	if x != nil {
		return x.ParentZone
	}
	return nil
}

func (x *DFSRequest) GetParentNodeId() string {
	if x != nil {
		return x.ParentNodeId
	}
	return ""
}

type DFSResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	FoundSibling    bool                   `protobuf:"varint,1,opt,name=found_sibling,json=foundSibling,proto3" json:"found_sibling,omitempty"`
	TakeoverNodeId  string                 `protobuf:"bytes,2,opt,name=takeover_node_id,json=takeoverNodeId,proto3" json:"takeover_node_id,omitempty"`
	TakeoverAddress string                 `protobuf:"bytes,3,opt,name=takeover_address,json=takeoverAddress,proto3" json:"takeover_address,omitempty"`
	TakeoverZone    *Zone                  `protobuf:"bytes,4,opt,name=takeover_zone,json=takeoverZone,proto3" json:"takeover_zone,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DFSResponse) Reset() {
	*x = DFSResponse{}
	mi := &file_can_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DFSResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DFSResponse) ProtoMessage() {}

func (x *DFSResponse) ProtoReflect() protoreflect.Message {
	mi := &file_can_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DFSResponse.ProtoReflect.Descriptor instead.
func (*DFSResponse) Descriptor() ([]byte, []int) {
	return file_can_proto_rawDescGZIP(), []int{20}
}

func (x *DFSResponse) GetFoundSibling() bool {
	if x != nil {
		return x.FoundSibling
	}
	return false
}

func (x *DFSResponse) GetTakeoverNodeId() string {
	if x != nil {
		return x.TakeoverNodeId
	}
	return ""
}

func (x *DFSResponse) GetTakeoverAddress() string {
	if x != nil {
		return x.TakeoverAddress
	}
	return ""
}

func (x *DFSResponse) GetTakeoverZone() *Zone {
	if x != nil {
		return x.TakeoverZone
	}
	return nil
}

type TakeoverRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	LeavingNodeId      string                 `protobuf:"bytes,1,opt,name=leaving_node_id,json=leavingNodeId,proto3" json:"leaving_node_id,omitempty"`
	LeavingNodeAddress string                 `protobuf:"bytes,2,opt,name=leaving_node_address,json=leavingNodeAddress,proto3" json:"leaving_node_address,omitempty"`
	LeavingZone        *Zone                  `protobuf:"bytes,3,opt,name=leaving_zone,json=leavingZone,proto3" json:"leaving_zone,omitempty"`
	IsGraceful         bool                   `protobuf:"varint,4,opt,name=is_graceful,json=isGraceful,proto3" json:"is_graceful,omitempty"` // Whether this is a graceful leave or a crash
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *TakeoverRequest) Reset() {
	*x = TakeoverRequest{}
	mi := &file_can_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TakeoverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeoverRequest) ProtoMessage() {}

func (x *TakeoverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_can_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeoverRequest.ProtoReflect.Descriptor instead.
func (*TakeoverRequest) Descriptor() ([]byte, []int) {
	return file_can_proto_rawDescGZIP(), []int{21}
}

func (x *TakeoverRequest) GetLeavingNodeId() string {
	if x != nil {
		return x.LeavingNodeId
	}
	return ""
}

func (x *TakeoverRequest) GetLeavingNodeAddress() string {
	if x != nil {
		return x.LeavingNodeAddress
	}
	return ""
}

func (x *TakeoverRequest) GetLeavingZone() *Zone {
	if x != nil {
		return x.LeavingZone
	}
	return nil
}

func (x *TakeoverRequest) GetIsGraceful() bool {
	if x != nil {
		return x.IsGraceful
	}
	return false
}

type TakeoverResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TakeoverResponse) Reset() {
	*x = TakeoverResponse{}
	mi := &file_can_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TakeoverResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeoverResponse) ProtoMessage() {}

func (x *TakeoverResponse) ProtoReflect() protoreflect.Message {
	mi := &file_can_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeoverResponse.ProtoReflect.Descriptor instead.
func (*TakeoverResponse) Descriptor() ([]byte, []int) {
	return file_can_proto_rawDescGZIP(), []int{22}
}

func (x *TakeoverResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TakeoverResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type TransferDataRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	RequestingNodeId string                 `protobuf:"bytes,1,opt,name=requesting_node_id,json=requestingNodeId,proto3" json:"requesting_node_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TransferDataRequest) Reset() {
	*x = TransferDataRequest{}
	mi := &file_can_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferDataRequest) ProtoMessage() {}

func (x *TransferDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_can_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferDataRequest.ProtoReflect.Descriptor instead.
func (*TransferDataRequest) Descriptor() ([]byte, []int) {
	return file_can_proto_rawDescGZIP(), []int{23}
}

func (x *TransferDataRequest) GetRequestingNodeId() string {
	if x != nil {
		return x.RequestingNodeId
	}
	return ""
}

type TransferDataResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []*KeyValuePair        `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferDataResponse) Reset() {
	*x = TransferDataResponse{}
	mi := &file_can_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferDataResponse) ProtoMessage() {}

func (x *TransferDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_can_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferDataResponse.ProtoReflect.Descriptor instead.
func (*TransferDataResponse) Descriptor() ([]byte, []int) {
	return file_can_proto_rawDescGZIP(), []int{24}
}

func (x *TransferDataResponse) GetData() []*KeyValuePair {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetNeighborsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNeighborsRequest) Reset() {
	*x = GetNeighborsRequest{}
	mi := &file_can_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNeighborsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNeighborsRequest) ProtoMessage() {}

func (x *GetNeighborsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_can_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNeighborsRequest.ProtoReflect.Descriptor instead.
func (*GetNeighborsRequest) Descriptor() ([]byte, []int) {
	return file_can_proto_rawDescGZIP(), []int{25}
}

type GetNeighborsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Neighbors     []*Node                `protobuf:"bytes,1,rep,name=neighbors,proto3" json:"neighbors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNeighborsResponse) Reset() {
	*x = GetNeighborsResponse{}
	mi := &file_can_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNeighborsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNeighborsResponse) ProtoMessage() {}

func (x *GetNeighborsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_can_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNeighborsResponse.ProtoReflect.Descriptor instead.
func (*GetNeighborsResponse) Descriptor() ([]byte, []int) {
	return file_can_proto_rawDescGZIP(), []int{26}
}

func (x *GetNeighborsResponse) GetNeighbors() []*Node {
	if x != nil {
		return x.Neighbors
	}
	return nil
}

type ZoneMergeNotification struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TakeoverNodeId string                 `protobuf:"bytes,1,opt,name=takeover_node_id,json=takeoverNodeId,proto3" json:"takeover_node_id,omitempty"`
	OldZone        *Zone                  `protobuf:"bytes,2,opt,name=old_zone,json=oldZone,proto3" json:"old_zone,omitempty"`
	NewZone        *Zone                  `protobuf:"bytes,3,opt,name=new_zone,json=newZone,proto3" json:"new_zone,omitempty"`
	LeavingNodeId  string                 `protobuf:"bytes,4,opt,name=leaving_node_id,json=leavingNodeId,proto3" json:"leaving_node_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ZoneMergeNotification) Reset() {
	*x = ZoneMergeNotification{}
	mi := &file_can_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ZoneMergeNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoneMergeNotification) ProtoMessage() {}

func (x *ZoneMergeNotification) ProtoReflect() protoreflect.Message {
	mi := &file_can_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoneMergeNotification.ProtoReflect.Descriptor instead.
func (*ZoneMergeNotification) Descriptor() ([]byte, []int) {
	return file_can_proto_rawDescGZIP(), []int{27}
}

func (x *ZoneMergeNotification) GetTakeoverNodeId() string {
	if x != nil {
		return x.TakeoverNodeId
	}
	return ""
}

func (x *ZoneMergeNotification) GetOldZone() *Zone {
	if x != nil {
		return x.OldZone
	}
	return nil
}

func (x *ZoneMergeNotification) GetNewZone() *Zone {
	if x != nil {
		return x.NewZone
	}
	return nil
}

func (x *ZoneMergeNotification) GetLeavingNodeId() string {
	if x != nil {
		return x.LeavingNodeId
	}
	return ""
}

type ZoneMergeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ZoneMergeResponse) Reset() {
	*x = ZoneMergeResponse{}
	mi := &file_can_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ZoneMergeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoneMergeResponse) ProtoMessage() {}

func (x *ZoneMergeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_can_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoneMergeResponse.ProtoReflect.Descriptor instead.
func (*ZoneMergeResponse) Descriptor() ([]byte, []int) {
	return file_can_proto_rawDescGZIP(), []int{28}
}

func (x *ZoneMergeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type CoordinatorElectionRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	CandidateNodeId string                 `protobuf:"bytes,1,opt,name=candidate_node_id,json=candidateNodeId,proto3" json:"candidate_node_id,omitempty"`
	CandidateVolume float32                `protobuf:"fixed32,2,opt,name=candidate_volume,json=candidateVolume,proto3" json:"candidate_volume,omitempty"`
	CrashedNodeId   string                 `protobuf:"bytes,3,opt,name=crashed_node_id,json=crashedNodeId,proto3" json:"crashed_node_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CoordinatorElectionRequest) Reset() {
	*x = CoordinatorElectionRequest{}
	mi := &file_can_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CoordinatorElectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoordinatorElectionRequest) ProtoMessage() {}

func (x *CoordinatorElectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_can_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoordinatorElectionRequest.ProtoReflect.Descriptor instead.
func (*CoordinatorElectionRequest) Descriptor() ([]byte, []int) {
	return file_can_proto_rawDescGZIP(), []int{29}
}

func (x *CoordinatorElectionRequest) GetCandidateNodeId() string {
	if x != nil {
		return x.CandidateNodeId
	}
	return ""
}

func (x *CoordinatorElectionRequest) GetCandidateVolume() float32 {
	if x != nil {
		return x.CandidateVolume
	}
	return 0
}

func (x *CoordinatorElectionRequest) GetCrashedNodeId() string {
	if x != nil {
		return x.CrashedNodeId
	}
	return ""
}

type CoordinatorElectionResponse struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ShouldBeCoordinator bool                   `protobuf:"varint,1,opt,name=should_be_coordinator,json=shouldBeCoordinator,proto3" json:"should_be_coordinator,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CoordinatorElectionResponse) Reset() {
	*x = CoordinatorElectionResponse{}
	mi := &file_can_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CoordinatorElectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoordinatorElectionResponse) ProtoMessage() {}

func (x *CoordinatorElectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_can_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoordinatorElectionResponse.ProtoReflect.Descriptor instead.
func (*CoordinatorElectionResponse) Descriptor() ([]byte, []int) {
	return file_can_proto_rawDescGZIP(), []int{30}
}

func (x *CoordinatorElectionResponse) GetShouldBeCoordinator() bool {
	if x != nil {
		return x.ShouldBeCoordinator
	}
	return false
}

var File_can_proto protoreflect.FileDescriptor

const file_can_proto_rawDesc = "" +
	"\n" +
	"\tcan.proto\x12\x03can\"V\n" +
	"\x04Zone\x12&\n" +
	"\x0eminCoordinates\x18\x01 \x03(\x02R\x0eminCoordinates\x12&\n" +
	"\x0emaxCoordinates\x18\x02 \x03(\x02R\x0emaxCoordinates\"X\n" +
	"\x04Node\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\x12\x1d\n" +
	"\x04zone\x18\x03 \x01(\v2\t.can.ZoneR\x04zone\"6\n" +
	"\fKeyValuePair\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value\"b\n" +
	"\vJoinRequest\x12 \n" +
	"\vcoordinates\x18\x01 \x03(\x02R\vcoordinates\x12\x17\n" +
	"\anode_id\x18\x02 \x01(\tR\x06nodeId\x12\x18\n" +
	"\aaddress\x18\x03 \x01(\tR\aaddress\"\xa5\x01\n" +
	"\fJoinResponse\x12.\n" +
	"\rassigned_zone\x18\x01 \x01(\v2\t.can.ZoneR\fassignedZone\x12'\n" +
	"\tneighbors\x18\x02 \x03(\v2\t.can.NodeR\tneighbors\x12<\n" +
	"\x10transferred_data\x18\x03 \x03(\v2\x11.can.KeyValuePairR\x0ftransferredData\">\n" +
	"\n" +
	"GetRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x1e\n" +
	"\vhash_to_use\x18\x02 \x01(\x05R\thashToUse\"#\n" +
	"\vGetResponse\x12\x14\n" +
	"\x05value\x18\x01 \x01(\fR\x05value\"T\n" +
	"\n" +
	"PutRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value\x12\x1e\n" +
	"\vhash_to_use\x18\x03 \x01(\x05R\thashToUse\"'\n" +
	"\vPutResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"A\n" +
	"\rDeleteRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x1e\n" +
	"\vhash_to_use\x18\x02 \x01(\x05R\thashToUse\"*\n" +
	"\x0eDeleteResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\";\n" +
	"\x12AddNeighborRequest\x12%\n" +
	"\bneighbor\x18\x01 \x01(\v2\t.can.NodeR\bneighbor\"/\n" +
	"\x13AddNeighborResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\",\n" +
	"\x10HeartbeatRequest\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\"-\n" +
	"\x11HeartbeatResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\x9a\x01\n" +
	"\x14NeighbourInfoRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x1d\n" +
	"\x04zone\x18\x02 \x01(\v2\t.can.ZoneR\x04zone\x12)\n" +
	"\n" +
	"neighbours\x18\x03 \x03(\v2\t.can.NodeR\n" +
	"neighbours\x12\x1f\n" +
	"\x05zones\x18\x04 \x03(\v2\t.can.ZoneR\x05zones\"1\n" +
	"\x15NeighbourInfoResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"d\n" +
	"\fLeaveRequest\x12&\n" +
	"\x0fleaving_node_id\x18\x01 \x01(\tR\rleavingNodeId\x12,\n" +
	"\fleaving_zone\x18\x02 \x01(\v2\t.can.ZoneR\vleavingZone\"N\n" +
	"\rLeaveResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\"\x86\x01\n" +
	"\n" +
	"DFSRequest\x12&\n" +
	"\x0fleaving_node_id\x18\x01 \x01(\tR\rleavingNodeId\x12*\n" +
	"\vparent_zone\x18\x02 \x01(\v2\t.can.ZoneR\n" +
	"parentZone\x12$\n" +
	"\x0eparent_node_id\x18\x03 \x01(\tR\fparentNodeId\"\xb7\x01\n" +
	"\vDFSResponse\x12#\n" +
	"\rfound_sibling\x18\x01 \x01(\bR\ffoundSibling\x12(\n" +
	"\x10takeover_node_id\x18\x02 \x01(\tR\x0etakeoverNodeId\x12)\n" +
	"\x10takeover_address\x18\x03 \x01(\tR\x0ftakeoverAddress\x12.\n" +
	"\rtakeover_zone\x18\x04 \x01(\v2\t.can.ZoneR\ftakeoverZone\"\xba\x01\n" +
	"\x0fTakeoverRequest\x12&\n" +
	"\x0fleaving_node_id\x18\x01 \x01(\tR\rleavingNodeId\x120\n" +
	"\x14leaving_node_address\x18\x02 \x01(\tR\x12leavingNodeAddress\x12,\n" +
	"\fleaving_zone\x18\x03 \x01(\v2\t.can.ZoneR\vleavingZone\x12\x1f\n" +
	"\vis_graceful\x18\x04 \x01(\bR\n" +
	"isGraceful\"Q\n" +
	"\x10TakeoverResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\"C\n" +
	"\x13TransferDataRequest\x12,\n" +
	"\x12requesting_node_id\x18\x01 \x01(\tR\x10requestingNodeId\"=\n" +
	"\x14TransferDataResponse\x12%\n" +
	"\x04data\x18\x01 \x03(\v2\x11.can.KeyValuePairR\x04data\"\x15\n" +
	"\x13GetNeighborsRequest\"?\n" +
	"\x14GetNeighborsResponse\x12'\n" +
	"\tneighbors\x18\x01 \x03(\v2\t.can.NodeR\tneighbors\"\xb5\x01\n" +
	"\x15ZoneMergeNotification\x12(\n" +
	"\x10takeover_node_id\x18\x01 \x01(\tR\x0etakeoverNodeId\x12$\n" +
	"\bold_zone\x18\x02 \x01(\v2\t.can.ZoneR\aoldZone\x12$\n" +
	"\bnew_zone\x18\x03 \x01(\v2\t.can.ZoneR\anewZone\x12&\n" +
	"\x0fleaving_node_id\x18\x04 \x01(\tR\rleavingNodeId\"-\n" +
	"\x11ZoneMergeResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\x9b\x01\n" +
	"\x1aCoordinatorElectionRequest\x12*\n" +
	"\x11candidate_node_id\x18\x01 \x01(\tR\x0fcandidateNodeId\x12)\n" +
	"\x10candidate_volume\x18\x02 \x01(\x02R\x0fcandidateVolume\x12&\n" +
	"\x0fcrashed_node_id\x18\x03 \x01(\tR\rcrashedNodeId\"Q\n" +
	"\x1bCoordinatorElectionResponse\x122\n" +
	"\x15should_be_coordinator\x18\x01 \x01(\bR\x13shouldBeCoordinator2\xdd\x06\n" +
	"\aCANNode\x12+\n" +
	"\x04Join\x12\x10.can.JoinRequest\x1a\x11.can.JoinResponse\x12(\n" +
	"\x03Get\x12\x0f.can.GetRequest\x1a\x10.can.GetResponse\x12(\n" +
	"\x03Put\x12\x0f.can.PutRequest\x1a\x10.can.PutResponse\x121\n" +
	"\x06Delete\x12\x12.can.DeleteRequest\x1a\x13.can.DeleteResponse\x12@\n" +
	"\vAddNeighbor\x12\x17.can.AddNeighborRequest\x1a\x18.can.AddNeighborResponse\x12:\n" +
	"\tHeartbeat\x12\x15.can.HeartbeatRequest\x1a\x16.can.HeartbeatResponse\x12J\n" +
	"\x11SendNeighbourInfo\x12\x19.can.NeighbourInfoRequest\x1a\x1a.can.NeighbourInfoResponse\x126\n" +
	"\rInitiateLeave\x12\x11.can.LeaveRequest\x1a\x12.can.LeaveResponse\x12/\n" +
	"\n" +
	"PerformDFS\x12\x0f.can.DFSRequest\x1a\x10.can.DFSResponse\x12;\n" +
	"\fTakeoverZone\x12\x14.can.TakeoverRequest\x1a\x15.can.TakeoverResponse\x12C\n" +
	"\fTransferData\x12\x18.can.TransferDataRequest\x1a\x19.can.TransferDataResponse\x12C\n" +
	"\fGetNeighbors\x12\x18.can.GetNeighborsRequest\x1a\x19.can.GetNeighborsResponse\x12E\n" +
	"\x0fNotifyZoneMerge\x12\x1a.can.ZoneMergeNotification\x1a\x16.can.ZoneMergeResponse\x12]\n" +
	"\x18ElectTakeoverCoordinator\x12\x1f.can.CoordinatorElectionRequest\x1a .can.CoordinatorElectionResponseB\x0eZ\f./protofilesb\x06proto3"

var (
	file_can_proto_rawDescOnce sync.Once
	file_can_proto_rawDescData []byte
)

func file_can_proto_rawDescGZIP() []byte {
	file_can_proto_rawDescOnce.Do(func() {
		file_can_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_can_proto_rawDesc), len(file_can_proto_rawDesc)))
	})
	return file_can_proto_rawDescData
}

var file_can_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_can_proto_goTypes = []any{
	(*Zone)(nil),                        // 0: can.Zone
	(*Node)(nil),                        // 1: can.Node
	(*KeyValuePair)(nil),                // 2: can.KeyValuePair
	(*JoinRequest)(nil),                 // 3: can.JoinRequest
	(*JoinResponse)(nil),                // 4: can.JoinResponse
	(*GetRequest)(nil),                  // 5: can.GetRequest
	(*GetResponse)(nil),                 // 6: can.GetResponse
	(*PutRequest)(nil),                  // 7: can.PutRequest
	(*PutResponse)(nil),                 // 8: can.PutResponse
	(*DeleteRequest)(nil),               // 9: can.DeleteRequest
	(*DeleteResponse)(nil),              // 10: can.DeleteResponse
	(*AddNeighborRequest)(nil),          // 11: can.AddNeighborRequest
	(*AddNeighborResponse)(nil),         // 12: can.AddNeighborResponse
	(*HeartbeatRequest)(nil),            // 13: can.HeartbeatRequest
	(*HeartbeatResponse)(nil),           // 14: can.HeartbeatResponse
	(*NeighbourInfoRequest)(nil),        // 15: can.NeighbourInfoRequest
	(*NeighbourInfoResponse)(nil),       // 16: can.NeighbourInfoResponse
	(*LeaveRequest)(nil),                // 17: can.LeaveRequest
	(*LeaveResponse)(nil),               // 18: can.LeaveResponse
	(*DFSRequest)(nil),                  // 19: can.DFSRequest
	(*DFSResponse)(nil),                 // 20: can.DFSResponse
	(*TakeoverRequest)(nil),             // 21: can.TakeoverRequest
	(*TakeoverResponse)(nil),            // 22: can.TakeoverResponse
	(*TransferDataRequest)(nil),         // 23: can.TransferDataRequest
	(*TransferDataResponse)(nil),        // 24: can.TransferDataResponse
	(*GetNeighborsRequest)(nil),         // 25: can.GetNeighborsRequest
	(*GetNeighborsResponse)(nil),        // 26: can.GetNeighborsResponse
	(*ZoneMergeNotification)(nil),       // 27: can.ZoneMergeNotification
	(*ZoneMergeResponse)(nil),           // 28: can.ZoneMergeResponse
	(*CoordinatorElectionRequest)(nil),  // 29: can.CoordinatorElectionRequest
	(*CoordinatorElectionResponse)(nil), // 30: can.CoordinatorElectionResponse
}
var file_can_proto_depIdxs = []int32{
	0,  // 0: can.Node.zone:type_name -> can.Zone
	0,  // 1: can.JoinResponse.assigned_zone:type_name -> can.Zone
	1,  // 2: can.JoinResponse.neighbors:type_name -> can.Node
	2,  // 3: can.JoinResponse.transferred_data:type_name -> can.KeyValuePair
	1,  // 4: can.AddNeighborRequest.neighbor:type_name -> can.Node
	0,  // 5: can.NeighbourInfoRequest.zone:type_name -> can.Zone
	1,  // 6: can.NeighbourInfoRequest.neighbours:type_name -> can.Node
	0,  // 7: can.NeighbourInfoRequest.zones:type_name -> can.Zone
	0,  // 8: can.LeaveRequest.leaving_zone:type_name -> can.Zone
	0,  // 9: can.DFSRequest.parent_zone:type_name -> can.Zone
	0,  // 10: can.DFSResponse.takeover_zone:type_name -> can.Zone
	0,  // 11: can.TakeoverRequest.leaving_zone:type_name -> can.Zone
	2,  // 12: can.TransferDataResponse.data:type_name -> can.KeyValuePair
	1,  // 13: can.GetNeighborsResponse.neighbors:type_name -> can.Node
	0,  // 14: can.ZoneMergeNotification.old_zone:type_name -> can.Zone
	0,  // 15: can.ZoneMergeNotification.new_zone:type_name -> can.Zone
	3,  // 16: can.CANNode.Join:input_type -> can.JoinRequest
	5,  // 17: can.CANNode.Get:input_type -> can.GetRequest
	7,  // 18: can.CANNode.Put:input_type -> can.PutRequest
	9,  // 19: can.CANNode.Delete:input_type -> can.DeleteRequest
	11, // 20: can.CANNode.AddNeighbor:input_type -> can.AddNeighborRequest
	13, // 21: can.CANNode.Heartbeat:input_type -> can.HeartbeatRequest
	15, // 22: can.CANNode.SendNeighbourInfo:input_type -> can.NeighbourInfoRequest
	17, // 23: can.CANNode.InitiateLeave:input_type -> can.LeaveRequest
	19, // 24: can.CANNode.PerformDFS:input_type -> can.DFSRequest
	21, // 25: can.CANNode.TakeoverZone:input_type -> can.TakeoverRequest
	23, // 26: can.CANNode.TransferData:input_type -> can.TransferDataRequest
	25, // 27: can.CANNode.GetNeighbors:input_type -> can.GetNeighborsRequest
	27, // 28: can.CANNode.NotifyZoneMerge:input_type -> can.ZoneMergeNotification
	29, // 29: can.CANNode.ElectTakeoverCoordinator:input_type -> can.CoordinatorElectionRequest
	4,  // 30: can.CANNode.Join:output_type -> can.JoinResponse
	6,  // 31: can.CANNode.Get:output_type -> can.GetResponse
	8,  // 32: can.CANNode.Put:output_type -> can.PutResponse
	10, // 33: can.CANNode.Delete:output_type -> can.DeleteResponse
	12, // 34: can.CANNode.AddNeighbor:output_type -> can.AddNeighborResponse
	14, // 35: can.CANNode.Heartbeat:output_type -> can.HeartbeatResponse
	16, // 36: can.CANNode.SendNeighbourInfo:output_type -> can.NeighbourInfoResponse
	18, // 37: can.CANNode.InitiateLeave:output_type -> can.LeaveResponse
	20, // 38: can.CANNode.PerformDFS:output_type -> can.DFSResponse
	22, // 39: can.CANNode.TakeoverZone:output_type -> can.TakeoverResponse
	24, // 40: can.CANNode.TransferData:output_type -> can.TransferDataResponse
	26, // 41: can.CANNode.GetNeighbors:output_type -> can.GetNeighborsResponse
	28, // 42: can.CANNode.NotifyZoneMerge:output_type -> can.ZoneMergeResponse
	30, // 43: can.CANNode.ElectTakeoverCoordinator:output_type -> can.CoordinatorElectionResponse
	30, // [30:44] is the sub-list for method output_type
	16, // [16:30] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_can_proto_init() }
func file_can_proto_init() {
	if File_can_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_can_proto_rawDesc), len(file_can_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_can_proto_goTypes,
		DependencyIndexes: file_can_proto_depIdxs,
		MessageInfos:      file_can_proto_msgTypes,
	}.Build()
	File_can_proto = out.File
	file_can_proto_goTypes = nil
	file_can_proto_depIdxs = nil
}
